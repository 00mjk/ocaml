
#       Characters 58-110:
  ........function
      None, None -> 1
    | Some _, Some _ -> 2..
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
((Some _, None)|(None, Some _))
val f : 'a option * 'b option -> int = <fun>
#             type _ t = A : int t | B : bool t | C : char t | D : float t
type (_, _, _, _) u = U : (int, int, int, int) u
type v = E | F | G
# * * * * * * *       Characters 274-275:
  let f (x : int t option) = match x with A -> 1 | _ -> 2;; (* warn *)
                                          ^
Error: This variant pattern is expected to have type int t option
       The constructor A does not belong to type option
# val f : unit t option -> int = <fun>
# Characters 53-59:
  let f (x : unit t option) = match x with None -> 1 | Some _ -> 2;; (* warn *)
                                                       ^^^^^^
Warning 11: this match case is unused.
val f : unit t option -> int = <fun>
# val f : int t option -> int = <fun>
# Characters 27-49:
  let f (x : int t option) = match x with None -> 1;; (* warn *)
                             ^^^^^^^^^^^^^^^^^^^^^^
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Some A
val f : int t option -> int = <fun>
# 
