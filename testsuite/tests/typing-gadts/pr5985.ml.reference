
#         Characters 92-115:
    type _ t = T : 'a -> 'a s t
        ^^^^^^^^^^^^^^^^^^^^^^^
Error: In this definition, a type variable cannot be deduced
       from the type parameters.
# Characters 11-12:
  module M = F (struct type 'a s = int end) ;;
             ^
Error: Unbound module F
#           Characters 95-173:
  ........['a] c x =
      object constraint 'a = 'b T.t val x' : 'b = x method x = x' end
Error: In this definition, a type variable cannot be deduced
       from the type parameters.
#     type (_, _) eq = Eq : ('a, 'a) eq
# val eq : 'a = <poly>
# val eq : ('a Queue.t, 'b Queue.t) eq = Eq
# Characters 4-33:
  type _ t = T : 'a -> 'a Queue.t t;; (* fail *)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error: In this definition, a type variable cannot be deduced
       from the type parameters.
#   Characters 33-36:
  let castT (type a) (type b) (x : a t) (e: (a, b) eq) : b t =
                                   ^^^
Error: Unbound type constructor t
# Characters 8-13:
  let x = castT (T 3) eq;;
          ^^^^^
Error: Unbound value castT
#           Characters 92-115:
    type _ t = T : 'a -> 'a s t
        ^^^^^^^^^^^^^^^^^^^^^^^
Error: In this definition, a type variable cannot be deduced
       from the type parameters.
#   Characters 59-60:
  module rec M : (S with type 'a s = unit) = M;;
                  ^
Error: Unbound module type S
# * *   
