#!/bin/bash
#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*                            John Whitington                             *
#*                                                                        *
#*   Copyright 2020 Institut National de Recherche en Informatique et     *
#*     en automatique                                                     *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

#Removes a label, i.e a space, a variable name, followed by a colon followed by
#an alphabetic character or ( or '. This should avoid altering the contents of
#comments.

#Stdlib
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/listLabels.mli > ../stdlib/list.mli
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/arrayLabels.mli > ../stdlib/array.mli
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/stringLabels.mli > ../stdlib/string.mli
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/bytesLabels.mli > ../stdlib/bytes.mli

#Stdlib - MoreLabels

#The unlabeling
#Two (slightly different) rounds required to deal with f:(key:key
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/templates/hashtbl.template.mli > ../stdlib/hashtbl.temp.mli
perl -p -e "s/\([a-z_]+:([a-z\('])/\(\1/g" \
  ../stdlib/hashtbl.temp.mli > ../stdlib/hashtbl.mli
rm -f ../stdlib/hashtbl.temp.mli

perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/templates/map.template.mli > ../stdlib/map.temp.mli
perl -p -e "s/\([a-z_]+:([a-z\('])/\(\1/g" \
  ../stdlib/map.temp.mli > ../stdlib/map.mli
rm -f ../stdlib/map.temp.mli

perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../stdlib/templates/set.template.mli > ../stdlib/set.temp.mli
perl -p -e "s/\([a-z_]+:([a-z\('])/\(\1/g" \
  ../stdlib/set.temp.mli > ../stdlib/set.mli
rm -f ../stdlib/set.temp.mli

#Substitute the labeled modules in to moreLabels.mli
perl -p -e\
  's/HASHTBL/`tail -n +19 ..\/stdlib\/templates\/hashtbl.template.mli`/e' \
  ../stdlib/templates/moreLabels.template.mli > ../stdlib/moreLabels.temp.mli
perl -p -e 's/MAP/`tail -n +19 ..\/stdlib\/templates\/map.template.mli`/e' \
  ../stdlib/moreLabels.temp.mli > ../stdlib/moreLabels.temp2.mli
perl -p -e 's/SET/`tail -n +19 ..\/stdlib\/templates\/set.template.mli`/e' \
  ../stdlib/moreLabels.temp2.mli > ../stdlib/moreLabels.mli
rm -f ../stdlib/moreLabels.temp.mli ../stdlib/moreLabels.temp2.mli

#Fix up
perl -p -e "s/type statistics =/type statistics = Hashtbl\.statistics =/" \
  ../stdlib/moreLabels.mli > ../stdlib/moreLabels.temp.mli
perl -p -e "s/type \('a, 'b\) t/type \('a, 'b\) t = \('a, 'b) Hashtbl.t/" \
  ../stdlib/moreLabels.temp.mli > ../stdlib/moreLabels.temp2.mli
perl -p -e\
  "s/module Make \(H : HashedType\) : S with type key = H.t\
/`cat unlabel-patches/1.mli`/" \
  ../stdlib/moreLabels.temp2.mli > ../stdlib/moreLabels.temp3.mli
perl -p -e\
  "s/module MakeSeeded \(H : SeededHashedType\) : SeededS with type key = H.t\
/`cat unlabel-patches/2.mli`/" \
  ../stdlib/moreLabels.temp3.mli > ../stdlib/moreLabels.temp4.mli
perl -p -e\
  "s/module Make \(Ord : OrderedType\) : S with type key = Ord.t\
/`cat unlabel-patches/3.mli`/" \
  ../stdlib/moreLabels.temp4.mli > ../stdlib/moreLabels.temp5.mli
perl -p -e\
  "s/module Make \(Ord : OrderedType\) : S with type elt = Ord.t\
/`cat unlabel-patches/4.mli`/" \
  ../stdlib/moreLabels.temp5.mli > ../stdlib/moreLabels.mli
rm -f ../stdlib/moreLabels.temp.mli
rm -f ../stdlib/moreLabels.temp2.mli
rm -f ../stdlib/moreLabels.temp3.mli
rm -f ../stdlib/moreLabels.temp4.mli
rm -f ../stdlib/moreLabels.temp5.mli

#Unix
perl -p -e "s/ [a-z_]+:([a-z\('])/ \1/g" \
  ../otherlibs/unix/unixLabels.mli > ../otherlibs/unix/unix.mli

#Remove type equivalences from unix.mli

#If one name is a prefix of another, must be after it in this list.
#e.g interval_timer_status and interval_timer
declare -a arr=("error"
                "process_status"
                "wait_flag"
                "file_descr"
                "open_flag"
                "seek_command"
                "file_kind"
                "stats"
                "LargeFile.stats"
                "access_permission"
                "dir_handle"
                "lock_command"
                "sigprocmask_command"
                "process_times"
                "tm"
                "interval_timer_status"
                "interval_timer"
                "passwd_entry"
                "group_entry"
                "inet_addr"
                "socket_domain"
                "socket_type"
                "sockaddr"
                "shutdown_command"
                "msg_flag"
                "host_entry"
                "protocol_entry"
                "service_entry"
                "terminal_io"
                "setattr_when"
                "flush_queue"
                "flow_action"
                "socket_bool_option"
                "socket_int_option"
                "socket_optint_option"
                "socket_float_option"
                "addr_info"
                "getaddrinfo_option"
                "name_info"
                "getnameinfo_option")

for typ in "${arr[@]}"
do
    export typ
    tmpfile=$(mktemp)
    perl -p -e 's/ = Unix.$ENV{'typ'}//' ../otherlibs/unix/unix.mli > ${tmpfile}
    cat ${tmpfile} > ../otherlibs/unix/unix.mli
    rm -f ${tmpfile}
done
